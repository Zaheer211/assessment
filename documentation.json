{
    "pipes": [],
    "interfaces": [
        {
            "name": "emailFormData",
            "id": "interface-emailFormData-7a4162bb9c781e4306a9243b40ee8d3d480031000c490b22e603e547c7317ef1d12a5396fbc9103b9418a7720cb28774ce54b9f658f6a9772ae5ff8064f58a5b",
            "file": "src/app/modules/user/components/edit-basic-info/edit-basic-info.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, Output, Renderer2 } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, Subject, filter, takeUntil } from 'rxjs';\n\ninterface emailFormData {\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-edit-basic-info',\n  templateUrl: './edit-basic-info.component.html',\n  styleUrls: ['./edit-basic-info.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditBasicInfoComponent {\n\n  @Output() public onSubmitEmailEditModal: Subject<emailFormData> = new Subject<emailFormData>();\n\n  private isOpenSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public isOpen$ = this.isOpenSubject.asObservable().pipe(filter(value => value !== null)); // Add filter here\n  public isOpen = false;\n  public openEmailEditModal$: Subject<boolean> = new Subject<boolean>();\n  private componentDestroy$: Subject<void> = new Subject<void>();\n  public emailForm!: FormGroup;\n  public bottomModalBreakPoints = [0, 0.25, 0.5, 0.75]\n  public intialBottomModalBreakPoint = 0.5;\n  public onMobile = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.setupEmailForm();\n    this.setupEmailFormBottomModalOpenSubscription();\n  }\n\n  private setupEmailForm(): void {\n    this.emailForm = this.formBuilder.group({\n      email: new FormControl<string | null>('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl<string | null>('', [Validators.required]),\n    });\n  }\n\n  private setupEmailFormBottomModalOpenSubscription(): void {\n    this.openEmailEditModal$\n      .pipe(takeUntil(this.componentDestroy$))\n      .subscribe({\n        next: (isOpen: boolean) => {\n          if (isOpen) {\n            this.addPreventScroll();\n          }\n          this.isOpen = isOpen;\n          this.cdr.detectChanges();\n          this.isOpenSubject.next(isOpen);\n        }\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroy$.next();\n    this.componentDestroy$.complete();\n  }\n\n  public onSubmitEditModal(): void {\n    if (this.emailForm.valid) {\n\n      // Clost the modal\n      this.isOpen = false;\n      this.cdr.detectChanges();\n      this.isOpenSubject.next(false);\n\n      let formData: emailFormData = {\n        email: this.emailForm.value.email,\n        password: this.emailForm.value.password\n      }\n\n      // TODO: Send form data to account component\n      this.onSubmitEmailEditModal.next(formData);\n      this.removePreventScroll();\n    } else {\n      // TODO: Show error message\n    }\n  }\n\n  private addPreventScroll(): void {\n    this.renderer.addClass(this.elementRef.nativeElement.ownerDocument.body, 'prevent-scroll');\n  }\n\n  public removePreventScroll(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement.ownerDocument.body, 'prevent-scroll');\n  }\n\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PAYOUT",
            "id": "interface-PAYOUT-954476a0289168023623b47fe97e0436ddcf32593374f3d0eb33993e4bec4dd158e2764ee61e1b12cf83554ba5246ab62168213a96551cef6c577161eb2606ad",
            "file": "src/app/modules/user/interfaces/payout.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PAYOUT {\n    id: number;\n    userId: number;\n    amount: number;\n    createdAt: Date;\n    startData: Date;\n    endDate: Date;\n    totalMatches: number;\n    nextPayoutDate: Date;\n}",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "endDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "nextPayoutDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "startData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "totalMatches",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-bfbc7e150f4da16c5bf3d5e552dcae89d8fe85b77639719926e582df6153c81052258f93fd20cfbcd06f2c32937807e66d4e765ae8a7a8b186307ece94575bb1",
            "file": "src/app/modules/user/interfaces/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n    id: number;\n    name: string;\n    username: string;\n    email: string;\n    address: {\n        street: string;\n        suite: number;\n        city: string;\n        zipcode: number;\n        geo: {\n            lat: number;\n            lng: number;\n        }\n    };\n    phone: number;\n    website: string;\n    company: {\n        name: string;\n        catchPhrase: string;\n        bs: string;\n    },\n    createdAt: Date;\n}",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "createdAt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AccountService",
            "id": "injectable-AccountService-5c3c3017385eee70b1066a289d68230eb64e1b04386e986464588646bd1f1e5cf7ee2a7c4082d7c92cfe65cf3c27f039d8eabb8ebff860f0d10b94abe6bcfbbc",
            "file": "src/app/modules/user/services/account.service.ts",
            "properties": [
                {
                    "name": "users_resource_url",
                    "defaultValue": "\"assets/data/users.json\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserData",
                    "args": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<User | undefined>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "userId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, map, throwError } from 'rxjs';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  private users_resource_url: string = \"assets/data/users.json\"\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  public getUserData(userId: number): Observable<User | undefined> {\n    return this.http.get<User[]>(this.users_resource_url).pipe(\n      map((users: User[]) => users.find(user => user.id === userId)),\n      catchError((error: any) => {\n        console.error('Error fetching user data:', error);\n        return throwError(() => new Error('Something went wrong while fetching user data.'));\n      })\n    );\n  }\n\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "EmailValidators",
            "id": "class-EmailValidators-632e74f32e44fa70ec09bb87f708ce7032b4e43f03a3a02d002f5828a1676bf80a823217c90098c94d3e4670a7d415fb8906f0a6078218105305af51f856d592",
            "file": "src/app/modules/user/validators/email-validators.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { isEmail as isEmailValidator } from 'class-validator';\n\nexport class EmailValidators {\n    static isEmail(): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            return !isEmailValidator(control.value) ? { email: true } : null;\n        };\n    }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "isEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AccountComponent",
            "id": "component-AccountComponent-37ecca930431be6b0ff273d73441ae82b2c2231765e570cbca98981735d72fe95ba5cf90c8a7975cb28221b88d6a86362fd6575249162d3482d223188717b268",
            "file": "src/app/modules/user/components/account/account.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-account",
            "styleUrls": [
                "./account.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./account.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageTitle",
                    "defaultValue": "'Account Info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "userData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | undefined",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userId",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "loadUserData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { AccountService } from '../../services/account.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { User } from '../../interfaces/user';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  public pageTitle: string = 'Account Info';\n  private userId = 1;\n  private destroy$: Subject<void> = new Subject<void>();\n  private userData: User | undefined;\n\n\n  constructor(\n    private accountService: AccountService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadUserData();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadUserData(): void {\n    this.accountService.getUserData(this.userId)\n      .pipe(\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        next: (user) => {\n          this.userData = user;\n        },\n        error: (error) => {\n          // console.error(error);\n          // Handle error scenarios\n        }\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".member_since_text {\n    margin-top: 40px;\n}\n\n.stats {\n    text-align: center;\n    padding: 0px 40px 10px 40px;\n}\n\n.stats_data {\n    display: flex;\n    flex-flow: column;\n    gap: 10px;\n}\n\n.tertiary_text {\n    color: var(--tertiary-text-color);\n    font-size: 12px;\n}\n\n.sec_text {\n    color: var(--secondary-text-color);\n    font-size: 12px;\n}\n\n.date_range {\n    margin-top: 10px;\n}\n\n.amount {\n    font-size: 38px;\n}\n\nsup {\n    font-size: 15px;\n}",
                    "styleUrl": "./account.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\">\n\n    <div class=\"header\">\n        <div class=\"main_heading\">{{pageTitle}}</div>\n    </div>\n\n    <div class=\"stats\">\n\n        <div class=\"member_since_text tertiary_text\">\n            Member since 9-4-2023\n        </div>\n\n        <div class=\"stats_data\">\n            <div class=\"date_range sec_text\">\n                Dec 24-28\n            </div>\n            <div class=\"amount\">\n                <sup>$</sup><span>453</span><sup>.56</sup>\n            </div>\n            <div class=\"matches tertiary_text\">\n                32 matches in 88hr 10m\n            </div>\n            <lib-list-btn class=\"mainActionButton\">Instant cash out $453.45</lib-list-btn>\n\n            <div class=\"next_payout tertiary_text\">\n                Next payout Sat. Dec 30\n            </div>\n\n        </div>\n\n    </div>\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <app-basic-info></app-basic-info>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <app-payout></app-payout>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <app-notifications-settings></app-notifications-settings>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <app-general-settings></app-general-settings>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <div class=\"section_content\">\n            <app-membership></app-membership>\n        </div>\n    </div>\n\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8db21928876d4afe882d157d5fbd00b16f4985069a3cab0cc547c7ce99b9d800369812e0b85b7708de4f50983d7b6e8023512b7ca6284b06c2c9705ef25046db",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'assessment'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'assessment';\n}\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet></router-outlet>"
        },
        {
            "name": "BasicInfoComponent",
            "id": "component-BasicInfoComponent-b7b2bc3f2755a9c80dceef25b10513364c28b11d7381c1093e211604520241b0e0cdcd28ed43fc3127f3cdad24a5514b8279496165006f91cea53c2942330111",
            "file": "src/app/modules/user/components/basic-info/basic-info.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-basic-info",
            "styleUrls": [
                "./basic-info.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./basic-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "basicInfoItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "editBasicInfoComponentRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EditBasicInfoComponent",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "EditBasicInfoComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "editEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitEmail",
                    "args": [
                        {
                            "name": "emailFormData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "emailFormData",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setBasicInfoItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { EditBasicInfoComponent } from '../edit-basic-info/edit-basic-info.component';\nimport { ListItemModel } from 'nextsapien-component-lib';\nimport getBasicInfoItems from './basicInfoItems';\n\n@Component({\n  selector: 'app-basic-info',\n  templateUrl: './basic-info.component.html',\n  styleUrls: ['./basic-info.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BasicInfoComponent {\n\n  @ViewChild(EditBasicInfoComponent) editBasicInfoComponentRef!: EditBasicInfoComponent;\n\n  public basicInfoItems!: ListItemModel[]\n\n  constructor() {\n    this.setBasicInfoItems()\n  }\n\n  private setBasicInfoItems() {\n    this.basicInfoItems = getBasicInfoItems(this.editEmail.bind(this))\n  }\n\n  editEmail() {\n    this.editBasicInfoComponentRef.openEmailEditModal$.next(true);\n  }\n\n  onSubmitEmail(emailFormData: { email: string, password: string }) {\n    // TODO: Handle email update\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".sub_heading {\n    /* width: 280px; */\n    display: flex;\n    margin-top: 20px;\n    justify-content: center;\n    align-items: center;\n    font-size: var(--font-size-medium);\n}",
                    "styleUrl": "./basic-info.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "extends": [],
            "templateData": "<div class=\"inner_container\">\n\n    <lib-list [listItems]=\"basicInfoItems\" [listTitle]=\"'Basic Info'\"></lib-list>\n\n    <lib-list-btn class=\"mainActionButton\">Familiar places</lib-list-btn>\n\n</div>\n\n<app-edit-basic-info (onSubmitEmailEditModal)=\"onSubmitEmail($event)\"></app-edit-basic-info>"
        },
        {
            "name": "EditBasicInfoComponent",
            "id": "component-EditBasicInfoComponent-7a4162bb9c781e4306a9243b40ee8d3d480031000c490b22e603e547c7317ef1d12a5396fbc9103b9418a7720cb28774ce54b9f658f6a9772ae5ff8064f58a5b",
            "file": "src/app/modules/user/components/edit-basic-info/edit-basic-info.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-basic-info",
            "styleUrls": [
                "./edit-basic-info.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-basic-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onSubmitEmailEditModal",
                    "defaultValue": "new Subject<emailFormData>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Subject<emailFormData>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bottomModalBreakPoints",
                    "defaultValue": "[0, 0.25, 0.5, 0.75]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "componentDestroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "emailForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "intialBottomModalBreakPoint",
                    "defaultValue": "0.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isOpen$",
                    "defaultValue": "this.isOpenSubject.asObservable().pipe(filter(value => value !== null))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isOpenSubject",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onMobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "openEmailEditModal$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addPreventScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmitEditModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "removePreventScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setupEmailForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setupEmailFormBottomModalOpenSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, Output, Renderer2 } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, Subject, filter, takeUntil } from 'rxjs';\n\ninterface emailFormData {\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-edit-basic-info',\n  templateUrl: './edit-basic-info.component.html',\n  styleUrls: ['./edit-basic-info.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditBasicInfoComponent {\n\n  @Output() public onSubmitEmailEditModal: Subject<emailFormData> = new Subject<emailFormData>();\n\n  private isOpenSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  public isOpen$ = this.isOpenSubject.asObservable().pipe(filter(value => value !== null)); // Add filter here\n  public isOpen = false;\n  public openEmailEditModal$: Subject<boolean> = new Subject<boolean>();\n  private componentDestroy$: Subject<void> = new Subject<void>();\n  public emailForm!: FormGroup;\n  public bottomModalBreakPoints = [0, 0.25, 0.5, 0.75]\n  public intialBottomModalBreakPoint = 0.5;\n  public onMobile = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.setupEmailForm();\n    this.setupEmailFormBottomModalOpenSubscription();\n  }\n\n  private setupEmailForm(): void {\n    this.emailForm = this.formBuilder.group({\n      email: new FormControl<string | null>('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      password: new FormControl<string | null>('', [Validators.required]),\n    });\n  }\n\n  private setupEmailFormBottomModalOpenSubscription(): void {\n    this.openEmailEditModal$\n      .pipe(takeUntil(this.componentDestroy$))\n      .subscribe({\n        next: (isOpen: boolean) => {\n          if (isOpen) {\n            this.addPreventScroll();\n          }\n          this.isOpen = isOpen;\n          this.cdr.detectChanges();\n          this.isOpenSubject.next(isOpen);\n        }\n      })\n  }\n\n  ngOnDestroy(): void {\n    this.componentDestroy$.next();\n    this.componentDestroy$.complete();\n  }\n\n  public onSubmitEditModal(): void {\n    if (this.emailForm.valid) {\n\n      // Clost the modal\n      this.isOpen = false;\n      this.cdr.detectChanges();\n      this.isOpenSubject.next(false);\n\n      let formData: emailFormData = {\n        email: this.emailForm.value.email,\n        password: this.emailForm.value.password\n      }\n\n      // TODO: Send form data to account component\n      this.onSubmitEmailEditModal.next(formData);\n      this.removePreventScroll();\n    } else {\n      // TODO: Show error message\n    }\n  }\n\n  private addPreventScroll(): void {\n    this.renderer.addClass(this.elementRef.nativeElement.ownerDocument.body, 'prevent-scroll');\n  }\n\n  public removePreventScroll(): void {\n    this.renderer.removeClass(this.elementRef.nativeElement.ownerDocument.body, 'prevent-scroll');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".error {\n    color: #FE3C72;\n    margin-left: 14px;\n    font-size: 12px;\n    margin-top: 7px;\n    font-weight: 300;\n    line-height: 7.86px;\n    size: 6.39px;\n    font: Poppins;\n}\n\n::ng-deep lib-input-field .input-field {\n    background-color: rgba(39, 36, 44, 1);\n    box-shadow: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}",
                    "styleUrl": "./edit-basic-info.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<lib-bottom-modal [(isOpen)]=\"isOpen\" [title]=\"'Email info'\" (submitModal)=\"onSubmitEditModal()\"\n    [initialBreakpoint]=\"intialBottomModalBreakPoint\" [breakpoints]=\"bottomModalBreakPoints\"\n    (closeModal)=\"removePreventScroll()\">\n    <form #formRef=\"ngForm\" [formGroup]=\"emailForm\" (ngSubmit)=\"onSubmitEditModal()\">\n\n        <p class=\"infoText\">\n            We will send you a verification code after entering your EmailID\n        </p>\n\n        <lib-input-field formControlName=\"email\" label=\"Email\" type=\"email\"></lib-input-field>\n        <div class=\"error\" *ngIf=\"emailForm.get('email')?.touched && emailForm.get('email')?.hasError('required')\">\n            Required\n        </div>\n        <div class=\"error\" *ngIf=\"emailForm.get('email')?.touched && emailForm.get('email')?.hasError('email')\">\n            Invalid email\n        </div>\n        <br><br>\n        <lib-input-field formControlName=\"password\" label=\"Password\" type=\"password\"></lib-input-field>\n        <div class=\"error\"\n            *ngIf=\"emailForm.get('password')?.touched && emailForm.get('password')?.hasError('required')\">\n            Required\n        </div>\n        <br><br>\n\n        <lib-primary-btn [hoverOutline]=\"true\" [disabled]=\"!emailForm.valid\"\n            (click)=\"onSubmitEditModal()\">Update</lib-primary-btn>\n        <br><br>\n    </form>\n</lib-bottom-modal>"
        },
        {
            "name": "GeneralSettingsComponent",
            "id": "component-GeneralSettingsComponent-b5441260801e49af718945b3a782fffac609479a10eff3752bb6228c55b65c8249f888ade7479dc6bbe75dc1d6dd8ad6d82360c450af220c8cde58ceda88e37b",
            "file": "src/app/modules/user/components/general-settings/general-settings.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-general-settings",
            "styleUrls": [
                "./general-settings.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./general-settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "otherListItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "securityAndPrivacyListItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "testingListItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "editLanguage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "openRulesAndTerms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setListItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "testingParticipationToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ListItemModel } from 'nextsapien-component-lib';\nimport { getOtherListItems, getSecurityAndPrivacyListItems, getTestingListItems } from './listItems';\n\n@Component({\n  selector: 'app-general-settings',\n  templateUrl: './general-settings.component.html',\n  styleUrls: ['./general-settings.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GeneralSettingsComponent {\n\n  public otherListItems!: ListItemModel[]\n  public securityAndPrivacyListItems!: ListItemModel[]\n  public testingListItems!: ListItemModel[]\n\n  constructor(\n    private router: Router\n  ) {\n    this.setListItems()\n  }\n\n  private setListItems() {\n    this.otherListItems = getOtherListItems(this.editLanguage.bind(this), this.openRulesAndTerms.bind(this))\n    this.securityAndPrivacyListItems = getSecurityAndPrivacyListItems()\n    this.testingListItems = getTestingListItems(this.testingParticipationToggle.bind(this))\n  }\n\n  private editLanguage() {\n    // TODO: Implement language change\n  }\n\n  private openRulesAndTerms() {\n    this.router.navigate(['/rules-and-terms']);\n  }\n\n  private testingParticipationToggle() {\n    // TODO: Implement testing participation toggle\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./general-settings.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"inner_container\">\n\n    <lib-list [listItems]=\"otherListItems\" [listTitle]=\"'Other'\"></lib-list>\n\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <lib-list [listItems]=\"securityAndPrivacyListItems\" [listTitle]=\"'Security and Privacy'\"></lib-list>\n        </div>\n    </div>\n\n    <div class=\"section\">\n        <lib-section-separator></lib-section-separator>\n        <div class=\"section_content\">\n            <lib-list-toggle [listItems]=\"testingListItems\" [listTitle]=\"'Testing'\"\n                [ngClass]=\"{'toggleList': true}\"></lib-list-toggle>\n        </div>\n    </div>\n\n</div>"
        },
        {
            "name": "MembershipComponent",
            "id": "component-MembershipComponent-c2b3251e68d772c510af25122e3f75f5a7221792301cfa2db6d5e86da9c76c82afecfb8fe5729ad9dfff6a796c36c0b2e6caabd6ed7b7c0640bdd37e6ad61e96",
            "file": "src/app/modules/user/components/membership/membership.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-membership",
            "styleUrls": [
                "./membership.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./membership.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-membership',\n  templateUrl: './membership.component.html',\n  styleUrls: ['./membership.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MembershipComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":root {\n    --lib-primary-button-text-shadow: 0 1px 0 rgba(255, 255, 255, 0.4);\n}\n\n.membership_settings {\n    --lib-button-font-color: rgba(168, 168, 168, 1);\n    display: flex;\n    flex-flow: column;\n    gap: 25px;\n    padding-bottom: 20px;\n    max-width: var(--app-max-width);\n}",
                    "styleUrl": "./membership.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"membership_settings\">\n\n    <lib-primary-btn [disableTextShadow]=\"true\">Pause Membership </lib-primary-btn>\n    <lib-primary-btn [disableTextShadow]=\"true\">Cancel Membership </lib-primary-btn>\n    <lib-primary-btn [disableTextShadow]=\"true\">Deactivate Account </lib-primary-btn>\n    <lib-primary-btn [disableTextShadow]=\"true\">Delete Account </lib-primary-btn>\n\n</div>"
        },
        {
            "name": "NotificationsSettingsComponent",
            "id": "component-NotificationsSettingsComponent-b48bd53879b001c98869bf8e1fc49c9022da8cd3039838deffada6d8305bf34e50f2b5d520db614de8ce10a1bfff15f8337718650e3d8c0ee5626261137fcaae",
            "file": "src/app/modules/user/components/notifications-settings/notifications-settings.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notifications-settings",
            "styleUrls": [
                "./notifications-settings.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./notifications-settings.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "listItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "emailNotificationsToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inAppNotificationsToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pushNotificationsToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setNotificationsListItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListItemModel } from 'nextsapien-component-lib';\nimport getNotificationsListItems from './notificationsListItems';\n\n@Component({\n  selector: 'app-notifications-settings',\n  templateUrl: './notifications-settings.component.html',\n  styleUrls: ['./notifications-settings.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationsSettingsComponent {\n\n\n  public listItems!: ListItemModel[]\n\n  constructor(\n  ) {\n    this.setNotificationsListItems()\n  }\n\n  private setNotificationsListItems() {\n    this.listItems = getNotificationsListItems(\n      this.inAppNotificationsToggle.bind(this),\n      this.pushNotificationsToggle.bind(this),\n      this.emailNotificationsToggle.bind(this)\n    )\n  }\n\n  private inAppNotificationsToggle() {\n    // TODO: Implement in-app notifications toggle\n  }\n\n  private pushNotificationsToggle() {\n    // TODO: Implement push notifications toggle\n  }\n\n  private emailNotificationsToggle() {\n    // TODO: Implement email notifications toggle\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./notifications-settings.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "extends": [],
            "templateData": "<div class=\"inner_container\">\n    <lib-list-toggle [listItems]=\"listItems\" [listTitle]=\"'Notifications'\"\n        [ngClass]=\"{'toggleList': true}\"></lib-list-toggle>\n</div>"
        },
        {
            "name": "PayoutComponent",
            "id": "component-PayoutComponent-ad2cd9e7b2ff24d715aaa0e08a594dc307838f55479e320f41fd539fb5457dc95e1359e1d788d1c047a8f9505e28a866ad97c63f631945b62ceb056e590ea9da",
            "file": "src/app/modules/user/components/payout/payout.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payout",
            "styleUrls": [
                "./payout.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./payout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "heading",
                    "defaultValue": "\"Payout\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "payoutItems",
                    "defaultValue": "getPayoutListItems()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport getPayoutListItems from './payoutItems';\n\n@Component({\n  selector: 'app-payout',\n  templateUrl: './payout.component.html',\n  styleUrls: ['./payout.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PayoutComponent {\n\n  public heading: string = \"Payout\";\n  public payoutItems = getPayoutListItems()\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./payout.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"inner_container\">\n    <lib-list [listItems]=\"payoutItems\" [listTitle]=\"heading\"></lib-list>\n</div>"
        },
        {
            "name": "RulesAndTermsComponent",
            "id": "component-RulesAndTermsComponent-ff68a4a13cab108681d46bab768b27b515bab7551bc03fa9ea943fbb179301f84671381fa7a42362171d6c0ff130b1cb08772814d3080586ab285a0fc582d818",
            "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-rules-and-terms",
            "styleUrls": [
                "./rules-and-terms.component.css",
                "../common.styles.css"
            ],
            "styles": [],
            "templateUrl": [
                "./rules-and-terms.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "listItems",
                    "defaultValue": "getRulesAndTermsListItems()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "pageTitle",
                    "defaultValue": "\"Rules & Terms\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListItemModel } from 'nextsapien-component-lib';\nimport getRulesAndTermsListItems from './rulesAndTermsListItems';\n\n@Component({\n  selector: 'app-rules-and-terms',\n  templateUrl: './rules-and-terms.component.html',\n  styleUrls: ['./rules-and-terms.component.css', '../common.styles.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RulesAndTermsComponent {\n\n  public pageTitle = \"Rules & Terms\";\n  public listItems: ListItemModel[] = getRulesAndTermsListItems()\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content {\n    margin-top: 50px;\n}",
                    "styleUrl": "./rules-and-terms.component.css"
                },
                {
                    "data": ".container {\n    /* background-color: var(--primary-color); */\n    /* overflow-y: scroll; */\n    max-width: var(--app-max-width);\n    margin: 0 auto;\n}\n\n.header {\n    width: 100%;\n    margin-top: 50px;\n    text-align: center;\n    display: flex;\n    align-items: center;\n}\n\n.main_heading {\n    width: 100%;\n    font-family: Calistoga;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 26px;\n    letter-spacing: 0em;\n    text-align: center;\n\n}\n\n.inner_container {\n    padding: 0px 40px;\n    max-width: var(--app-max-width);\n    font-family: Gilroy-Regular;\n    --knob-color: #fff;\n    --toggle-background-on: #fe3c72;\n    --toggle-background-off: #29252d;\n    --toggle-box-shadow-on: 0 0 10px #fe3c72;\n    --toggle-box-shadow-off: inset 17px 22px 20px 2.5px rgba(17, 16, 20, .7), inset -2px -2px 8px rgba(203, 199, 209, .5);\n}\n\n.section {\n    margin-top: 35px;\n}\n\n.section_content {\n    margin-top: 20px;\n}\n\n.mainActionButton {\n    --lib-list-button-font-size: 16px;\n    --lib-list-button-font-weight: 500;\n    --lib-list-button-font-family: Gilroy-Bold;\n}",
                    "styleUrl": "../common.styles.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\n\n    <div class=\"header\">\n\n        <lib-icon-btn routerLink=\"/\"><img src=\"assets/icons/back.svg\" alt='back-btn' /></lib-icon-btn>\n        <div class=\"main_heading\">{{pageTitle}}</div>\n\n    </div>\n\n    <div class=\"content\">\n\n        <lib-list [listItems]=\"listItems\"></lib-list>\n\n    </div>\n\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-90958ed2cc1571b1e001f495b43fa988f31ed433bbd0435c8c5e8fcfdd3187fa97369c9588e675549f50f2cd02afcc5e8867b77f3f8cbbd70b76a0deab99b4d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IonicModule } from '@ionic/angular';\nimport { provideIonicAngular } from '@ionic/angular/standalone';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    IonicModule.forRoot({}),\n  ],\n  providers: [TranslateService, provideIonicAngular()],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-fbb5a6a45935edffa52ea1ee0f3721dcabe4d5a9c86acb59891de11f3e035b5b8b75606e520a705381dd9b1eb39380501610c67fc1387092f656081753400b35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => \"import('./modules/user/user.module').then(m => m.UserModule)\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserModule",
            "id": "module-UserModule-397318e4588fe7ed8f8c79e2a8d79e9df6711427bd251cc29c3bbe2a7684520369163d5a57942d13045a40101a4a1bb0f61b92dad023410269f1e1a9aa873786",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/user/user.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { routes } from './user.routes';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AccountService } from './services/account.service';\nimport { ButtonsModule, InputFieldModule, ListModule, NextsapienComponentLibModule, PopupModalService, SectionSeparatorModule } from 'nextsapien-component-lib';\nimport { AccountComponent } from './components/account/account.component';\nimport { MembershipComponent } from './components/membership/membership.component';\nimport { BasicInfoComponent } from './components/basic-info/basic-info.component';\nimport { GeneralSettingsComponent } from './components/general-settings/general-settings.component';\nimport { PayoutComponent } from './components/payout/payout.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { LibModalModule } from 'nextsapien-component-lib';\nimport { EditBasicInfoComponent } from './components/edit-basic-info/edit-basic-info.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NotificationsSettingsComponent } from './components/notifications-settings/notifications-settings.component';\nimport { RulesAndTermsComponent } from './components/rules-and-terms/rules-and-terms.component';\n\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    MembershipComponent,\n    BasicInfoComponent,\n    GeneralSettingsComponent,\n    PayoutComponent,\n    EditBasicInfoComponent,\n    NotificationsSettingsComponent,\n    RulesAndTermsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    NextsapienComponentLibModule,\n    ButtonsModule,\n    ListModule,\n    SectionSeparatorModule,\n    LibModalModule,\n    InputFieldModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [AccountService],\n})\nexport class UserModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AccountService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountComponent"
                        },
                        {
                            "name": "BasicInfoComponent"
                        },
                        {
                            "name": "EditBasicInfoComponent"
                        },
                        {
                            "name": "GeneralSettingsComponent"
                        },
                        {
                            "name": "MembershipComponent"
                        },
                        {
                            "name": "NotificationsSettingsComponent"
                        },
                        {
                            "name": "PayoutComponent"
                        },
                        {
                            "name": "RulesAndTermsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/account/account.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/membership/membership.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/payout/payout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/account/account.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AccountComponent>",
                "defaultValue": "{\n    title: 'Account',\n    component: AccountComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [\n                // AccountComponent,\n                BasicInfoComponent,\n                GeneralSettingsComponent,\n                MembershipComponent,\n                NotificationsSettingsComponent,\n                PayoutComponent\n            ],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                SectionSeparatorModule,\n            ],\n            providers: [TranslateService, AccountService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: AccountComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-account></app-account>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicInfoComponent>",
                "defaultValue": "{\n    title: 'Basic Info',\n    component: BasicInfoComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ReactiveFormsModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                LibModalModule,\n                MatIconModule,\n                InputFieldModule,\n            ],\n            declarations: [EditBasicInfoComponent],\n        }),\n    ],\n    render: (args: BasicInfoComponent) => ({\n        applicationConfig: {\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\n        },\n        template: `<app-basic-info></app-basic-info>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GeneralSettingsComponent>",
                "defaultValue": "{\n    title: 'General Settings',\n    component: GeneralSettingsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [GeneralSettingsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                SectionSeparatorModule\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: GeneralSettingsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-general-settings></app-general-settings>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/membership/membership.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MembershipComponent>",
                "defaultValue": "{\n    title: 'Membership',\n    component: MembershipComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [MembershipComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ButtonsModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: MembershipComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-membership></app-membership>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationsSettingsComponent>",
                "defaultValue": "{\n    title: 'Notifications Settings',\n    component: NotificationsSettingsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [NotificationsSettingsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: NotificationsSettingsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-notifications-settings></app-notifications-settings>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/payout/payout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PayoutComponent>",
                "defaultValue": "{\n    title: 'Payout',\n    component: PayoutComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [PayoutComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: PayoutComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-payout></app-payout>`,\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RulesAndTermsComponent>",
                "defaultValue": "{\n    title: 'Rules and terms',\n    component: RulesAndTermsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [RulesAndTermsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: RulesAndTermsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-rules-and-terms></app-rules-and-terms>`,\n    }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "getBasicInfoItems",
                "file": "src/app/modules/user/components/basic-info/basicInfoItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "editEmailCommand",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ListItemModel[]",
                "jsdoctags": [
                    {
                        "name": "editEmailCommand",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getNotificationsListItems",
                "file": "src/app/modules/user/components/notifications-settings/notificationsListItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "inAppNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pushNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "emailNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ListItemModel[]",
                "jsdoctags": [
                    {
                        "name": "inAppNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pushNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "emailNotificationsToggle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getOtherListItems",
                "file": "src/app/modules/user/components/general-settings/listItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "editLanguage",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "openRulesAndTerms",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ListItemModel[]",
                "jsdoctags": [
                    {
                        "name": "editLanguage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "openRulesAndTerms",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getPayoutListItems",
                "file": "src/app/modules/user/components/payout/payoutItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ListItemModel[]"
            },
            {
                "name": "getRulesAndTermsListItems",
                "file": "src/app/modules/user/components/rules-and-terms/rulesAndTermsListItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ListItemModel[]"
            },
            {
                "name": "getSecurityAndPrivacyListItems",
                "file": "src/app/modules/user/components/general-settings/listItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ListItemModel[]"
            },
            {
                "name": "getTestingListItems",
                "file": "src/app/modules/user/components/general-settings/listItems.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "testingParticipationToggle",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ListItemModel[]",
                "jsdoctags": [
                    {
                        "name": "testingParticipationToggle",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AccountComponent>",
                "file": "src/app/modules/user/components/account/account.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicInfoComponent>",
                "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GeneralSettingsComponent>",
                "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MembershipComponent>",
                "file": "src/app/modules/user/components/membership/membership.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationsSettingsComponent>",
                "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PayoutComponent>",
                "file": "src/app/modules/user/components/payout/payout.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RulesAndTermsComponent>",
                "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/modules/user/components/account/account.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/account/account.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/account/account.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AccountComponent>",
                    "defaultValue": "{\n    title: 'Account',\n    component: AccountComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [\n                // AccountComponent,\n                BasicInfoComponent,\n                GeneralSettingsComponent,\n                MembershipComponent,\n                NotificationsSettingsComponent,\n                PayoutComponent\n            ],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                SectionSeparatorModule,\n            ],\n            providers: [TranslateService, AccountService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: AccountComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-account></app-account>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/basic-info/basic-info.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicInfoComponent>",
                    "defaultValue": "{\n    title: 'Basic Info',\n    component: BasicInfoComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            imports: [\n                CommonModule,\n                FormsModule,\n                ReactiveFormsModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                LibModalModule,\n                MatIconModule,\n                InputFieldModule,\n            ],\n            declarations: [EditBasicInfoComponent],\n        }),\n    ],\n    render: (args: BasicInfoComponent) => ({\n        applicationConfig: {\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\n        },\n        template: `<app-basic-info></app-basic-info>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/general-settings/general-settings.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GeneralSettingsComponent>",
                    "defaultValue": "{\n    title: 'General Settings',\n    component: GeneralSettingsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [GeneralSettingsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n                SectionSeparatorModule\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: GeneralSettingsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-general-settings></app-general-settings>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/membership/membership.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/membership/membership.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/membership/membership.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MembershipComponent>",
                    "defaultValue": "{\n    title: 'Membership',\n    component: MembershipComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [MembershipComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ButtonsModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: MembershipComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-membership></app-membership>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationsSettingsComponent>",
                    "defaultValue": "{\n    title: 'Notifications Settings',\n    component: NotificationsSettingsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [NotificationsSettingsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: NotificationsSettingsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-notifications-settings></app-notifications-settings>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/payout/payout.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/payout/payout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/payout/payout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PayoutComponent>",
                    "defaultValue": "{\n    title: 'Payout',\n    component: PayoutComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [PayoutComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: PayoutComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-payout></app-payout>`,\n    }),\n}"
                }
            ],
            "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RulesAndTermsComponent>",
                    "defaultValue": "{\n    title: 'Rules and terms',\n    component: RulesAndTermsComponent,\n    excludeStories: /.*Data$/,\n    tags: ['autodocs'],\n    decorators: [\n        applicationConfig({\n            providers: [importProvidersFrom(BrowserAnimationsModule),\n            importProvidersFrom(TranslateModule.forRoot()),\n            importProvidersFrom(IonicModule.forRoot()),\n            importProvidersFrom(RouterModule.forRoot(routes)),\n                TranslateService, provideIonicAngular()],\n        }),\n        moduleMetadata({\n            declarations: [RulesAndTermsComponent],\n            imports: [\n                CommonModule,\n                NextsapienComponentLibModule,\n                ListModule,\n                ButtonsModule,\n            ],\n            providers: [TranslateService, provideIonicAngular()],\n        }),\n    ],\n    render: (args: RulesAndTermsComponent) => ({\n        props: {\n            ...args,\n        },\n        template: `<app-rules-and-terms></app-rules-and-terms>`,\n    }),\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/modules/user/components/basic-info/basicInfoItems.ts": [
                {
                    "name": "getBasicInfoItems",
                    "file": "src/app/modules/user/components/basic-info/basicInfoItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "editEmailCommand",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ListItemModel[]",
                    "jsdoctags": [
                        {
                            "name": "editEmailCommand",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/modules/user/components/notifications-settings/notificationsListItems.ts": [
                {
                    "name": "getNotificationsListItems",
                    "file": "src/app/modules/user/components/notifications-settings/notificationsListItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "inAppNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pushNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "emailNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ListItemModel[]",
                    "jsdoctags": [
                        {
                            "name": "inAppNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pushNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "emailNotificationsToggle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/modules/user/components/general-settings/listItems.ts": [
                {
                    "name": "getOtherListItems",
                    "file": "src/app/modules/user/components/general-settings/listItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "editLanguage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "openRulesAndTerms",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ListItemModel[]",
                    "jsdoctags": [
                        {
                            "name": "editLanguage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "openRulesAndTerms",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSecurityAndPrivacyListItems",
                    "file": "src/app/modules/user/components/general-settings/listItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ListItemModel[]"
                },
                {
                    "name": "getTestingListItems",
                    "file": "src/app/modules/user/components/general-settings/listItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "testingParticipationToggle",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ListItemModel[]",
                    "jsdoctags": [
                        {
                            "name": "testingParticipationToggle",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/modules/user/components/payout/payoutItems.ts": [
                {
                    "name": "getPayoutListItems",
                    "file": "src/app/modules/user/components/payout/payoutItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ListItemModel[]"
                }
            ],
            "src/app/modules/user/components/rules-and-terms/rulesAndTermsListItems.ts": [
                {
                    "name": "getRulesAndTermsListItems",
                    "file": "src/app/modules/user/components/rules-and-terms/rulesAndTermsListItems.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ListItemModel[]"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/modules/user/components/account/account.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AccountComponent>",
                    "file": "src/app/modules/user/components/account/account.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/basic-info/basic-info.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicInfoComponent>",
                    "file": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/general-settings/general-settings.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GeneralSettingsComponent>",
                    "file": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/membership/membership.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MembershipComponent>",
                    "file": "src/app/modules/user/components/membership/membership.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationsSettingsComponent>",
                    "file": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/payout/payout.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PayoutComponent>",
                    "file": "src/app/modules/user/components/payout/payout.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RulesAndTermsComponent>",
                    "file": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "loadChildren": "./modules/user/user.module#UserModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/user/user.routes.ts",
                                        "module": "UserModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AccountComponent"
                                            },
                                            {
                                                "path": "rules-and-terms",
                                                "component": "RulesAndTermsComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "UserModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/account/account.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/account/account.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/account/account.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/basic-info/basic-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/basic-info/basic-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/basic-info/basicInfoItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getBasicInfoItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/edit-basic-info/edit-basic-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditBasicInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/edit-basic-info/edit-basic-info.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "emailFormData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/general-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GeneralSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/general-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/listItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getOtherListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/listItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getSecurityAndPrivacyListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/general-settings/listItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getTestingListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/membership/membership.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MembershipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/membership/membership.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/membership/membership.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/notifications-settings/notifications-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationsSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/notifications-settings/notifications-settings.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/notifications-settings/notificationsListItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getNotificationsListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/payout/payout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/payout/payout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/payout/payout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/payout/payoutItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getPayoutListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/rules-and-terms/rules-and-terms.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RulesAndTermsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/rules-and-terms/rules-and-terms.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/components/rules-and-terms/rulesAndTermsListItems.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getRulesAndTermsListItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/interfaces/payout.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PAYOUT",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/interfaces/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/services/account.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AccountService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/user/validators/email-validators.ts",
                "type": "class",
                "linktype": "classe",
                "name": "EmailValidators",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}